actor CrocBeatSupport : BaseMM8BDMUseItem
{
//$Category MM8BDM-Assists/Weapon
//$Title Beat Support
//$Sprite WEA4O0
//Inventory.RespawnTics 300
inventory.amount 1
inventory.maxamount 1
inventory.pickupmessage "$PU_BEATSUPPORT"
Tag "$TAG_BEATSUPPORT"
inventory.icon "BEATI"
Inventory.PickupSound "item/1up"
scale 2.0
+COUNTITEM
+INVBAR
+NOBLOOD
states
{
SpawnLoop:
WEA4 O -1
loop
Use:
WEAP B 0 A_JumpIfInventory("CrocBeatSupportActivated", 1, "Failed")
WEAP B 0 A_PlaySoundEx("item/refill","Voice")
WEAP B 0 A_GiveInventory("CrocBeatSupportCounter",984)
WEAP B 0 A_SpawnItemEx("CrocBeatSupportChecker")
WEAP B 0 A_SpawnItemEx("CrocBeatSupportWarper")
WEAP B 0 ACS_NamedExecuteAlways("core_beatattack",0,0)
stop
Failed:
WEAP B 0
fail
}
}

actor CrocBeatSupport_Respawn : 8BDMItemRespawn
{
	mass 1050
}
actor CrocBeatSupport_RespawnShadow : 8BDMItemRespawnShadow
{
	mass 1050
	States
	{
	Spawn:
		WEA4 O 0
		goto Super::Spawn
	}
}

actor CrocBeatSupportCounter : Inventory
{
inventory.amount 1
inventory.maxamount 984
}

actor CrocBeatSupportChecker
{
+MISSILE
+NOINTERACTION
+DONTBLAST
states
{
Spawn:
TNT1 A 0 //A_Countdown
TNT1 A 1 A_JumpIfInTargetInventory("IsDead", 1, "Death")
TNT1 A 0 A_JumpIfInTargetInventory("CrocBeatSupportFired",1,"Skip")
TNT1 A 0 A_JumpIfInTargetInventory("CrocBeatSupportRefresh",1,"Skip")
TNT1 A 0 A_GiveToTarget("CrocBeatSupportRefresher",1)
TNT1 A 0 A_TakeFromTarget("CrocBeatSupportCounter",1)
TNT1 A 5 A_JumpIfInTargetInventory("CrocBeatSupportCounter",1,"Spawn")
goto Death
Skip:
TNT1 A 0 A_TakeFromTarget("CrocBeatSupportCounter",1)
TNT1 A 5 A_JumpIfInTargetInventory("CrocBeatSupportCounter",1,"Spawn")
goto Death
Death:
TNT1 A 0 A_TakeFromTarget("CrocBeatSupportActivated")
TNT1 A 0 A_TakeFromTarget("CrocBeatSupportFired")
TNT1 A 0 A_TakeFromTarget("CrocBeatSupportRefresh")
TNT1 A 0 A_TakeFromTarget("CrocBeatSupportCounter",999)
stop
}
}

actor CrocBeatSupportWarper : BasicGraphicEffect
{
	+DONTBLAST
	States
	{
	SpawnFrame:
		TNT1 A 1
		Goto SpawnA
	SpawnA:
		BEAT A 0 A_JumpIfInTargetInventory("CrocBeatSupportFired", 1, "Firing")
		BEAT AA 1 A_Warp(AAPTR_TARGET, -32, -32, 52, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT A 0 A_JumpIfInTargetInventory("CrocBeatSupportActivated", 1, "SpawnB")
		BEAT A 1 A_JumpIf(true, "Death")
		wait
	SpawnB:
		BEAT A 0 A_JumpIfInTargetInventory("CrocBeatSupportFired", 1, "Firing")
		BEAT BB 1 A_Warp(AAPTR_TARGET, -32, -32, 52, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT A 0 A_JumpIfInTargetInventory("CrocBeatSupportActivated", 1, "SpawnC")
		BEAT B 1 A_JumpIf(true, "Death")
		wait
	SpawnC:
		BEAT A 0 A_JumpIfInTargetInventory("CrocBeatSupportFired", 1, "Firing")
		BEAT CC 1 A_Warp(AAPTR_TARGET, -32, -32, 52, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT A 0 A_JumpIfInTargetInventory("CrocBeatSupportActivated", 1, "SpawnA")
		BEAT C 1 A_JumpIf(true, "Death")
		wait
	Firing:
		TNT1 A 35
		TNT1 A 1 A_Warp(AAPTR_TARGET, -32 - 48 + 48, -32 + 32, 52 - 32, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT A 1 A_Warp(AAPTR_TARGET, -32 - 40 + 64, -32 + 48, 52 - 28, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT B 1 A_Warp(AAPTR_TARGET, -32 - 32 + 48, -32 + 64, 52 - 24, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT B 1 A_Warp(AAPTR_TARGET, -32 - 24 + 32, -32 + 48, 52 - 20, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT C 1 A_Warp(AAPTR_TARGET, -32 - 16 + 16, -32 + 32, 52 - 16, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT C 1 A_Warp(AAPTR_TARGET, -32 - 8 + 0, -32 + 16, 52 - 12, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT A 1 A_Warp(AAPTR_TARGET, -32 - 0 - 16, -32 + 0, 52 - 10, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT A 1 A_Warp(AAPTR_TARGET, -32 - 0 - 32, -32 - 16, 52 - 6, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT B 1 A_Warp(AAPTR_TARGET, -32 - 0 - 16, -32 - 32, 52 - 4, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		BEAT B 1 A_Warp(AAPTR_TARGET, -32 - 0 - 0, -32 - 16, 52 - 0, 0, WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION)
		Goto SpawnA
	Death:
		TNT1 A 0
		stop
	}
}
/*
actor CrocBeatSupportGFX1
{
+NOINTERACTION
Scale 2.5
states
{
spawn:
BEAT A 4
stop
}
}

actor CrocBeatSupportGFX2 : CrocBeatSupportGFX1
{
states
{
spawn:
BEAT B 4
stop
}
}

actor CrocBeatSupportGFX3 : CrocBeatSupportGFX1
{
states
{
spawn:
BEAT C 4
stop
}
}
*/
actor CrocBeatSupportActivated : Once {}

actor CrocBeatSupportFired : Powerup 
{
powerup.duration 45
}


actor CrocBeatSupportRefresh : Once {}

actor CrocBeatSupportRefresher : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_GiveInventory("CrocBeatSupportRefresh",1)
WEAP B 0 A_PlaySound("item/beat")
stop
}
}

actor CrocBeatSupportFire : CustomInventory
{
states
{
Pickup:
WEAP B 0 A_FireCustomMissile("CrocBeatSupportProjectile",0,0,8,0)
WEAP B 0 A_GiveInventory("CrocBeatSupportFired",1)
stop
}
}

actor CrocBeatSupportProjectile : BasicProjectile
{
Radius 16
Height 16
damage (24)
Obituary "$OB_BEATSUPPORT"
+THRUGHOST
+SKYEXPLODE
damagetype "Beat"
speed 44
States
{
Spawn:
BEAT ABCABCABCABC 2 A_SpawnItemEx("CrocBeatSupportTrailFX",0,0,0,0,0,0,0,SXF_WEPFXCOLOR)
goto Death
Death:
BEAT A 0 A_CustomMissile("CrocBeatSupportReturn",0,0,0,0)
stop
}
}

actor CrocBeatSupportTrailFX : BasicGraphicEffect
{
states
{
Spawn:
TNT1 A 0
TNT1 A 1 A_Jump(256,1,2,3)
Spawn1:
BEAT E 2 A_FadeOut(0.15)
loop
Spawn2:
BEAT F 2 A_FadeOut(0.15)
loop
Spawn3:
BEAT G 2 A_FadeOut(0.15)
loop
}
}

actor CrocBeatSupportReturn : BasicProjectile
{
Radius 5
Height 5
damage (0)
+RIPPER
+NOINTERACTION
+DONTBLAST
+SKYEXPLODE
speed 50
States
{
Spawn:
BEAT AABBCC 1 A_JumpIfCloser(64,"Returned")
BEAT A 0 A_CustomMissile("CrocBeatSupportReturn",0,0,0,0)
stop
Death:
XDeath:
Returned:
BEAT A 0 //A_TakeFromTarget("CrocBeatSupportFired",1)
stop
}
}
