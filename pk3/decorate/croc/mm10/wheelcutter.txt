actor CrocWheelCutterWep_NormalBar : NormalBar { args 4, 95 }
actor CrocWheelCutterWep_ScriptBar : ScriptBar {}

actor CrocWheelCutterWep : BaseMM8BDMWep
{
    //$Category MM8BDM-Weapons/Close
    //$Title Wheel Cutter
    //$Sprite WHEEA0
    Weapon.AmmoUse 2
    Weapon.AmmoGive 28
    Weapon.SlotNumber 4
    Obituary "$OB_WHEELCUTTER"
    Tag "$TAG_WHEELCUTTER"
    Inventory.Pickupmessage "$PU_WHEELCUTTER"
    weapon.ammotype "CrocWheelCutterAmmo"
    inventory.icon "WHEELI"
    States
    {
    SpawnLoop:
        WHEE A -1
        loop 
    Ready:
        WHEE I 0 ACS_NamedExecuteWithResult("core_weaponcolor",CLR_WHEELCUTTER)
        WHEE I 0 A_TakeInventory("CrocWheelCutterCheck", 105)
        WHEE I 1 A_WeaponReady
        wait
    Deselect:
        WHEE I 0
        goto DeselectSwap
    Select:
        WHEE I 0
        goto SelectSwap
    Fire:
        WHEE I 0 A_JumpIfNoAmmo("NoAmmo")
        WHEE J 0 A_TakeInventory("CrocWheelCutterAmmo",2,TIF_NOTAKEINFINITE)
        WHEE J 0 A_PlaySoundEx("weapons/mm10/wheelcutteractivate","Weapon")
        WHEE J 0 A_GiveInventory("CrocWheelCutterCheck", 105)
        WHEE J 1
        WHEE J 0 A_GiveInventory("CrocFireWheelSaw", 1)
        WHEE I 0 A_Refire
        goto Throw
    Hold:
        WHEE J 0 A_JumpIfInventory("CrocWheelCutterCheck", 1, "HoldLoop")
        goto Throw
    HoldLoop:
        WHEE J 1 
        WHEE J 0 A_Refire("HoldLoop2")
        goto Throw
    HoldLoop2:
        WHEE J 1 
        WHEE J 0 A_Refire("HoldLoop3")
        goto Throw
    HoldLoop3:
        WHEE J 1 
        WHEE J 0 A_Refire("HoldLoop4")
        goto Throw
    HoldLoop4:
        WHEE J 1 
        WHEE J 0 A_Refire("HoldLoop5")
        goto Throw
    HoldLoop5:
        WHEE J 1
        WHEE J 0 A_TakeInventory("CrocWheelCutterCheck", 1)
        WHEE J 0 A_JumpIfInventory("CrocWheelCutterDestroy", 1, "End")
        WHEE J 0 A_JumpIfInventory("IsBot", 1, "Throw")
        WHEE J 0 A_Refire
        Goto Throw
    Altfire:
        WHEE I 0 A_JumpIfNoAmmo("NoAmmo")
        WHEE J 0 A_PlaySoundEx("weapons/mm10/wheelcutteractivate","Weapon")
        WHEE J 1
    Throw:
        WHEE J 0 A_TakeInventory("CrocWheelCutterCheck", 105)
        WHEE J 0 A_TakeInventory("CrocWheelCutterDestroy", 1)
        WHEE J 0 A_PlaySoundEx("weapons/mm10/wheelcutterfire","weapon")
        WHEE J 0 A_FireCustomMissile("CrocWheelCutterLaunchPlacer", 0, 1, 8, -16)
        WHEE JK 3
        WHEE I 0 A_TakeInventory("CrocWheelCutterCheck", 105)
        WHEE I 16
        WHEE I 0 A_ClearRefire
        goto Ready+1
    End:
        WHEE J 1
        WHEE J 0 A_TakeInventory("CrocWheelCutterDestroy", 1)
        WHEE JK 3
        WHEE J 0 A_TakeInventory("CrocWheelCutterCheck", 105)
        WHEE I 10
        WHEE I 0 A_ClearRefire
        goto Ready+1
    NoAmmo:
        WHEE I 1 ACS_Execute(979,0)
        Goto Ready+1
    }
}

actor CrocWheelCutterCheck : Inventory
{
    inventory.amount 1
    inventory.maxamount 105
}

actor CrocWheelCutterDestroy : CrocWheelCutterCheck
{
    inventory.maxamount 1
}

// Melee stuff
const int WEPC_10WC_SAWRADIUS = 96;
// check for commented instances of this to make sure updates match

actor CrocFireWheelSaw : CustomInventory
{
    States
    {
    Pickup:
        WHEE J 0 A_SpawnItemEx("CrocWheelCutterSaw", WEPC_10WC_SAWRADIUS*cos(pitch), 8, 32+WEPC_10WC_SAWRADIUS*sin(-pitch), 0, 0, 0, 0, SXF_NOCHECKPOSITION, 0)
        WHEE J 0 A_JumpIfInventory("PowerSpreadRune", 1, "PickupSpread")
        stop
    PickupSpread:
        WHEE J 0 A_SpawnItemEx("CrocWheelCutterSawL", WEPC_10WC_SAWRADIUS*cos(pitch), 8, 32+WEPC_10WC_SAWRADIUS*sin(-pitch), 0, 0, 0, -15, SXF_NOCHECKPOSITION,0)
        WHEE J 0 A_SpawnItemEx("CrocWheelCutterSawR", WEPC_10WC_SAWRADIUS*cos(pitch), 8, 32+WEPC_10WC_SAWRADIUS*sin(-pitch), 0, 0, 0, 15, SXF_NOCHECKPOSITION,0)
        stop
    }
}

actor CrocWheelCutterSaw : BasicBouncer
{
    +DONTSPLASH
    +NOINTERACTION
	Height 10
	Radius 5
	Scale 2.5
    Damage(0)
    mass 30
	States
	{
	Spawn:
		WHEE B 0
	SpawnB1:
		WHEE B 0 A_GiveToTarget("CrocWheelCutterWallClimb", 1)
        WHEE B 0 A_SetPitch(CallACS("core_GetPtrPitch", AAPTR_TARGET)) // if this was zscript i could just do target.pitch...
        WHEE B 1 A_Warp(AAPTR_TARGET, WEPC_10WC_SAWRADIUS*cos(pitch), 8, 32+WEPC_10WC_SAWRADIUS*sin(-pitch), mass-30, WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION)
        WHEE B 0 A_JumpIfInTargetInventory("CrocWheelCutterDestroy", 1, "Death")
        WHEE B 0 A_JumpIfInTargetInventory("IsDead", 1, "End")
		WHEE B 0 A_JumpIfInTargetInventory("CrocWheelCutterCheck", 1, "SpawnB2")
		WHEE B 1 A_JumpIf(true, "End")
		wait
	SpawnB2:
		WHEE B 0 //A_GiveToTarget("CrocWheelCutterWallClimb", 1)
        WHEE B 0 A_SetPitch(CallACS("core_GetPtrPitch", AAPTR_TARGET))
        WHEE B 1 A_Warp(AAPTR_TARGET, WEPC_10WC_SAWRADIUS*cos(pitch), 8, 32+WEPC_10WC_SAWRADIUS*sin(-pitch), mass-30, WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION)
        WHEE B 0 A_JumpIfInTargetInventory("CrocWheelCutterDestroy", 1, "Death")
        WHEE B 0 A_JumpIfInTargetInventory("IsDead", 1, "End")
		WHEE B 0 A_JumpIfInTargetInventory("CrocWheelCutterCheck", 1, "SpawnC1")
		WHEE B 1 A_JumpIf(true, "End")
		wait
	SpawnC1:
		WHEE B 0 A_GiveToTarget("CrocWheelCutterWallClimb", 1)
        WHEE B 0 A_SetPitch(CallACS("core_GetPtrPitch", AAPTR_TARGET))
        WHEE C 1 A_Warp(AAPTR_TARGET, WEPC_10WC_SAWRADIUS*cos(pitch), 8, 32+WEPC_10WC_SAWRADIUS*sin(-pitch), mass-30, WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION)
        WHEE B 0 A_JumpIfInTargetInventory("CrocWheelCutterDestroy", 1, "Death")
        WHEE B 0 A_JumpIfInTargetInventory("IsDead", 1, "End")
		WHEE B 0 A_JumpIfInTargetInventory("CrocWheelCutterCheck", 1, "SpawnC2")
		WHEE C 1 A_JumpIf(true, "End")
		wait
	SpawnC2:
		WHEE B 0 //A_GiveToTarget("CrocWheelCutterWallClimb", 1)
        WHEE B 0 A_SetPitch(CallACS("core_GetPtrPitch", AAPTR_TARGET))
        WHEE C 1 A_Warp(AAPTR_TARGET, WEPC_10WC_SAWRADIUS*cos(pitch), 8, 32+WEPC_10WC_SAWRADIUS*sin(-pitch), mass-30, WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION)
        WHEE B 0 A_JumpIfInTargetInventory("CrocWheelCutterDestroy", 1, "Death")
        WHEE B 0 A_JumpIfInTargetInventory("IsDead", 1, "End")
		WHEE B 0 A_JumpIfInTargetInventory("CrocWheelCutterCheck", 1, "SpawnB1")
		WHEE C 1 A_JumpIf(true, "End")
		wait
    End:
		WHEE B 0 A_TakeFromTarget("CrocWheelCutterDestroy", 1)
		WHEE B 0 A_TakeFromTarget("CrocWheelCutterCheck", 105)
        WHEE B 1
		stop
	Death:
        WHEE B 0 A_GiveToTarget("CrocWheelCutterDestroy", 1)
		TNT1 A 0 A_SpawnItemEx("ExplosionEffect1")
		stop
	}
}

actor CrocWheelCutterSawL : WheelCutterSaw
{
    mass 15
}

actor CrocWheelCutterSawR : WheelCutterSaw
{
    mass 45
}

actor CrocWheelCutterWallClimb : CustomInventory
{
	+INVENTORY.AUTOACTIVATE
	States
	{
	Use:
        TNT1 A 0 A_FireCustomMissile("CrocWheelCutterWallCheck", 0, 0, 8, 0) // A_SpawnItemEx("CrocWheelCutterWallCheck", 0, 0, 24, 64)
        TNT1 A 0 A_FireCustomMissile("CrocWheelCutterSawDamage", 0, 0, 8, 0)
		stop
	}
}

actor CrocWheelCutterWallCheck : BasicFastProjectile
{
    +THRUACTORS
    +DONTREFLECT
    +NOEXPLODEFLOOR
    +DONTSPLASH
    damage (0)
    Speed 32
    radius 8
    height 16
    speed 96 // WEPC_10WC_SAWRADIUS
    States
    {
    Spawn:
        TNT1 A 1
        stop
    Death:
        TNT1 A 0 A_JumpIf(ceilingz-z <= 56, "End")
        TNT1 A 0 A_SpawnItemEx("CrocWheelCutterClimbFX", 16, 0, frandom(-16, 16), 5, 0, 1, 180+frandom(-8, 8), SXF_WEPFXCOLOR)
        TNT1 A 0 A_PlaySoundEx("weapons/mm10/wheelcutterclimb", "body")
        TNT1 A 0 A_JumpIf(z-floorz < 8, "Floor")
        TNT1 A 0 A_GiveToTarget("CrocWheelThruster",1)
        TNT1 A 10
        stop
    End:
        TNT1 A 0
        stop
    Floor:
        TNT1 A 0 A_GiveToTarget("CrocWheelFloorThruster",1)
        TNT1 A 10
        stop
    }
}

actor CrocWheelThruster : CustomInventory
{
    +INVENTORY.AUTOACTIVATE
    States
    {
    Pickup:
        TNT1 A 0 A_TakeInventory("JumpCancler", 1)
        TNT1 A 0 A_TakeInventory("CrocWheelCutterCheck", 3)
        TNT1 A 0 A_JumpIfInventory("CrocWheelFloorRolled", 1, "Rebound")
        TNT1 A 0 A_JumpIf(momz < -8.24, "MinSpeed")
        TNT1 A 0 A_JumpIf(momz > 20, "MaxSpeed")
        TNT1 A 1 A_ChangeVelocity(0, 0, 2.5)
        stop
    MinSpeed:
        TNT1 A 1 A_ChangeVelocity(0, 0, 5)
        stop
    MaxSpeed:
        TNT1 A 1 A_ChangeVelocity(momx, momy, 20, CVF_REPLACE)
        stop
    Rebound:
        TNT1 A 0 A_TakeInventory("CrocWheelFloorRolled", 1)
        TNT1 A 0 A_ChangeVelocity(momx, momy, sqrt(momx*momx+momy*momy)/2, CVF_REPLACE)
        stop
    }
}

actor CrocWheelFloorThruster : CustomInventory
{
    +INVENTORY.AUTOACTIVATE
    States
    {
    Pickup:
        TNT1 A 0 A_TakeInventory("CrocWheelCutterCheck", 3)
        TNT1 A 0 A_GiveInventory("CrocWheelFloorRolled", 1)
        TNT1 A 0 A_ChangeVelocity(1.8, 0, 0, CVF_RELATIVE)
        stop
    }
}

actor CrocWheelFloorRolled : Powerup { powerup.duration 10 }

actor CrocWheelCutterClimbFX : BasicGraphicEffect
{
    +BRIGHT
    States
    {
    Spawn:
        WHEE LLMMNN 1 ThrustThingZ(0, 3, 1, 1)
        stop
    }
}

actor CrocWheelCutterSawDamage : BasicFastProjectile
{
    +DONTSPLASH
	Obituary "$OB_WHEELCUTTER"
	damagetype "WheelCutterSaw"
	Height 10
    Radius 20
    Damage (3)
    Speed 96 // WEPC_10WC_SAWRADIUS
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
        stop
    Death:
        TNT1 A 0
        stop
    XDeath:
        WHEE B 0 A_GiveToTarget("CrocWheelFloorThruster", 1)
        WHEE B 0 // A_GiveToTarget("CrocWheelCutterDestroy", 1)
        stop
    }
}

// Projectile stuff
actor CrocWheelCutterMaster : ProjSpawnFuncActor
{
    PROJECTILE
    Obituary "$OB_WHEELCUTTER"
    Damagetype "WheelCutter"
    scale 2.5
    -NOGRAVITY
    +BOUNCEONCEILINGS
    Radius 10
    Height 10
    Damage (20)
    States
    {
    Death:
        TNT1 A 0 A_SpawnItemEx("ExplosionEffect1", 0, 0, 20, 0, 0, 0, 0, SXF_WEPFXCOLOR)
        TNT1 A 10
        stop
    }
}

actor CrocWheelCutterMasterFast : ProjSpawnFuncActorFast
{
    PROJECTILE
    Obituary "$OB_WHEELCUTTER"
    Damagetype "WheelCutter"
    scale 2.5
    Radius 10
    Height 10
    Damage (20)
    States
    {
    Death:
        TNT1 A 0 A_SpawnItemEx("ExplosionEffect1", 0, 0, 20, 0, 0, 0, 0, SXF_WEPFXCOLOR)
        TNT1 A 10
        stop
    }
}

actor CrocWheelCutterLaunchPlacer : CrocWheelCutterMasterFast
{
    Speed 96 // WEPC_10WC_SAWRADIUS
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_SpawnItemEx("CrocWheelCutterLauncher", 0, 0, 0, momx/WEPC_10WC_SAWRADIUS, momy/WEPC_10WC_SAWRADIUS, momz/WEPC_10WC_SAWRADIUS, 0, SXF_ABSOLUTEMOMENTUM|SXF_MULTIPLYSPEED)
        stop
    Death:
        TNT1 A 0 A_SpawnItemEx("CrocWheelCutter", 0, 0, 0, 1.0, 0, 0, 0, SXF_MULTIPLYSPEED)
        TNT1 A 10
        stop
    XDeath:
        TNT1 A 0
        goto  Super::Death
    }
}

actor CrocWheelCutterLauncher : CrocWheelCutterMaster
{
    Speed 15
    States
    {
    Spawn:
        WHEE DE 2
        loop
    Death:
        TNT1 A 0 A_SpawnItemEx("CrocWheelCutter", 0, 0, 0, 1.0, 0, 0, 0, SXF_MULTIPLYSPEED)
        TNT1 A 10
        stop
    XDeath:
        TNT1 A 0
        goto Super::Death
    }
}

actor CrocWheelCutterGround : Once {}

actor WheelCutter : CrocWheelCutterMaster
{
    +NOEXPLODEFLOOR
    +STEPMISSILE
    maxstepheight 24
    BounceCount 1
    reactiontime 200
    Speed 40
    States
    {
    Spawn:
        WHEE D 0
        WHEE E 2 A_ScaleVelocity(0.0625) // 0.0625
        WHEE D 0 A_GiveInventory("CrocWheelCutterFunc", 1)
        WHEE D 0 A_ChangeVelocity(0, 0, 0.0625 * 40)
        WHEE D 2 A_ChangeVelocity(2.00 * momx, 2.00 * momy, momz, CVF_REPLACE) // 0.125
        WHEE E 2 A_ChangeVelocity(2.00 * momx, 2.00 * momy, momz, CVF_REPLACE) // 0.25
        WHEE D 2 A_ChangeVelocity(2.00 * momx, 2.00 * momy, momz, CVF_REPLACE) // 0.5
        WHEE E 2 A_ChangeVelocity(2.00 * momx, 2.00 * momy, momz, CVF_REPLACE) // 1.0
    SpawnLoop:
        WHEE DDEE 1 A_GiveInventory("CrocWheelCutterFunc", 1)
        loop
    }
}

actor CrocWheelCutterFunc : CustomInventory
{
    States
    {
    Pickup:
        TNT1 A 0 A_CountDown
        TNT1 A 0 A_JumpIfInventory("CrocWheelCutterGround", 1, "GroundCheck")
    AirCheck:
        TNT1 A 0 A_CheckFloor("Landed")
        stop
    Landed:
        TNT1 A 0 A_GiveInventory("CrocWheelCutterGround", 1)
        TNT1 A 0 A_PlaySoundEx("weapons/mm10/wheelcutterroll", "Body")
        TNT1 A 0 A_SpawnItemEx("CrocWheelCutterRollFXSpawn")
        stop
    GroundCheck:
        TNT1 A 0 A_JumpIf(z-floorz > 0, "Air")
        stop
    Air:
        TNT1 A 0 A_TakeInventory("CrocWheelCutterGround", 1)
        stop
    }
}

actor CrocWheelCutterRollFXSpawn : BasicWatcher
{
    +USESPAWNEVENTSCRIPT
    var int user_UseProjSpawnFunc;
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 AAAAA 0 A_SpawnItemEx("CrocWheelCutterRollFX", 16, 0, frandom(-16, 16), 5, 0, 1, 180+frandom(-8, 8), SXF_WEPFXCOLOR)
        stop
    }
}

actor CrocWheelCutterRollFX : BasicGraphicEffect
{
    +BRIGHT
    States
    {
    SpawnFrame:
        WHEE LLMMNN 1 ThrustThingZ(0, 3, 0, 1)
        stop
    }
}

actor CrocWheelCutterAmmo : Ammo
{
    inventory.amount 1
    inventory.maxamount 28
    +INVENTORY.IGNORESKILL
}
